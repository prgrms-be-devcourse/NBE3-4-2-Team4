server:
  port: 8080
  tomcat:
    max-swallow-size: ${spring.servlet.multipart.max-request-size}
    max-http-form-post-size: ${spring.servlet.multipart.max-request-size}
spring:
  application:
    name: NBE3-4-2-Team4
  profiles:
    active: dev
  servlet:
    multipart:
      max-file-size: 50MB
      max-request-size: 500MB
  web:
    resources:
      add-mappings: false
  output:
    ansi:
      enabled: always
  jackson:
    serialization:
      fail-on-empty-beans: false
    property-naming-strategy:   # JSON 필드 이름 네이밍 케이스 변경 (카멜 -> 스네이크)
      SNAKE_CASE
  datasource:
    url: jdbc:h2:./db_dev;MODE=MySQL
    username: sa
    password:
    driver-class-name: org.h2.Driver
    hikari:
      auto-commit: false
  jpa:
    open-in-view: false
    hibernate:
      ddl-auto: update
    properties:
      hibernate:
        default_batch_fetch_size: 100
        format_sql: true
        highlight_sql: true
        use_sql_comments: true
        dialect: org.hibernate.dialect.H2Dialect
      javax:
        persistence:
          lock:
            timeout: 3000
  config:
    import: application-secret.yml
springdoc:
  default-produces-media-type: application/json;charset=UTF-8
logging:
  level:
    org.hibernate.SQL: DEBUG
    org.hibernate.orm.jdbc.bind: TRACE
    org.hibernate.orm.jdbc.extract: TRACE
    org.springframework.transaction.interceptor: TRACE
custom: #   이 둘은 실제 서비스 시 변경 or prod.yml 을 만들고 거기에 변경 값 추가
  domain:
    backend: "http://localhost:${server.port}"
    frontend: "http://localhost:3000"
  initData:
    member:
      admin:
        username: admin@test.com
        password: 1234
        nickname: 관리자
        email: admin@test.com
      member1:
        username: test@test.com
        password: 1234
        nickname: 테스트 유저
        email: member1@test.com
      member2:
        username: test2@test.com
        password: 1234
        nickname: 테스트 유저 2
        email: member2@test.com
  genFile:
    dirPath: c:/temp/wikipoint_dev